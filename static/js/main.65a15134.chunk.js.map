{"version":3,"sources":["actions/PageActions.js","util/date.js","reducers/page.js","reducers/user.js","reducers/index.js","actions/UserActions.js","store/configureStore.js","components/User.js","containers/UserContainer.js","components/ListPhoto.js","components/BigPhoto.js","components/PhotoManager.js","components/Page.js","containers/PageContainer.js","components/App.js","serviceWorker.js","index.js"],"names":["photosArr","cached","makeYearPhotos","photos","selectedYear","yearPhotos","forEach","item","Date","date","getFullYear","push","sort","a","b","likes","count","getPhotos","year","dispatch","type","payload","getMorePhotos","offset","VK","Api","call","extended","v","r","concat","response","items","e","error","Error","getCurrentYear","initialState","isFetching","name","rootReducer","combineReducers","page","state","action","message","user","store","createStore","applyMiddleware","thunk","logger","User","renderTemplate","props","className","onClick","handleLogin","this","React","Component","UserContainer","connect","successCallback","Auth","login","session","username","first_name","ListPhoto","openModal","map","photo","key","id","src","sizes","url","alt","BigPhoto","isLoading","loadImage","setState","img","Image","onload","customStyles","content","top","left","right","bottom","marginRight","transform","padding","overlay","backgroundColor","PhotoManager","modalIsOpen","activeUrl","closeModal","Fragment","isOpen","ariaHideApp","style","onRequestClose","Page","onBtnClick","event","currentTarget","innerText","renderButtons","years","index","length","PageContainer","number","currentYear","Array","from","el","i","getLastYears","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.65a15134.chunk.js","sourcesContent":["export const GET_PHOTOS_REQUEST = \"GET_PHOTOS_REQUEST\";\nexport const GET_PHOTOS_SUCCESS = \"GET_PHOTOS_SUCCESS\";\nexport const GET_PHOTOS_FAILURE = \"GET_PHOTOS_FAILURE\";\n\nlet photosArr = [];\nlet cached = false;\n\nfunction makeYearPhotos(photos, selectedYear) {\n  let createdYear,\n    yearPhotos = [];\n\n  photos.forEach(item => {\n    createdYear = new Date(item.date * 1000).getFullYear();\n    if (createdYear === selectedYear) {\n      yearPhotos.push(item);\n    }\n  });\n\n  yearPhotos.sort((a, b) => b.likes.count - a.likes.count);\n\n  return yearPhotos;\n}\n\nfunction getMorePhotos(offset, count, year, dispatch) {\n  //eslint-disable-next-line no-undef\n  VK.Api.call(\n    \"photos.getAll\",\n    { extended: 1, count: count, offset: offset, v: \"5.80\" },\n    r => {\n      try {\n        photosArr = photosArr.concat(r.response.items);\n        if (offset <= r.response.count) {\n          offset += 200;\n          getMorePhotos(offset, count, year, dispatch);\n        } else {\n          let photos = makeYearPhotos(photosArr, year);\n          cached = true;\n          dispatch({\n            type: GET_PHOTOS_SUCCESS,\n            payload: photos,\n          });\n        }\n      } catch (e) {\n        dispatch({\n          type: GET_PHOTOS_FAILURE,\n          error: true,\n          payload: new Error(e),\n        });\n      }\n    }\n  );\n}\n\nexport function getPhotos(year) {\n  return dispatch => {\n    dispatch({\n      type: GET_PHOTOS_REQUEST,\n      payload: year,\n    });\n\n    if (cached) {\n      let photos = makeYearPhotos(photosArr, year);\n      dispatch({\n        type: GET_PHOTOS_SUCCESS,\n        payload: photos,\n      });\n    } else {\n      getMorePhotos(0, 200, year, dispatch);\n    }\n  };\n}\n","export const getCurrentYear = () => new Date().getFullYear();\n\nexport const getLastYears = number => {\n  const currentYear = getCurrentYear();\n\n  return Array.from({ length: number }, (el, i) => currentYear - i); // массив состоящий из number последних лет\n};\n","import {\n  GET_PHOTOS_REQUEST,\n  GET_PHOTOS_SUCCESS,\n  GET_PHOTOS_FAILURE,\n} from \"../actions/PageActions\";\nimport { getCurrentYear } from \"../util/date\";\n\nconst initialState = {\n  year: getCurrentYear(),\n  photos: [],\n  isFetching: false,\n  error: \"\",\n};\n\nexport function pageReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_PHOTOS_REQUEST:\n      return { ...state, year: action.payload, isFetching: true, error: \"\" };\n\n    case GET_PHOTOS_SUCCESS:\n      return { ...state, photos: action.payload, isFetching: false, error: \"\" };\n\n    case GET_PHOTOS_FAILURE:\n      return { ...state, error: action.payload.message, isFetching: false };\n\n    default:\n      return state;\n  }\n}\n","import {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n} from \"../actions/UserActions\";\n\nconst initialState = {\n  name: \"\",\n  error: \"\",\n  isFetching: false,\n};\n\nexport function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return { ...state, isFetching: true, error: \"\" };\n\n    case LOGIN_SUCCESS:\n      return { ...state, isFetching: false, name: action.payload };\n\n    case LOGIN_FAILURE:\n      return { ...state, isFetching: false, error: action.payload.message };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { pageReducer } from \"./page\";\nimport { userReducer } from \"./user\";\n\nexport const rootReducer = combineReducers({\n  page: pageReducer,\n  user: userReducer,\n});\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nexport function handleLogin() {\n  return function(dispatch) {\n    dispatch({\n      type: LOGIN_REQUEST,\n    });\n    //eslint-disable-next-line no-undef\n    VK.Auth.login(r => {\n      if (r.session) {\n        let username = r.session.user.first_name;\n\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: username,\n        });\n      } else {\n        dispatch({\n          type: LOGIN_FAILURE,\n          error: true,\n          payload: new Error(\"Ошибка авторизации\"),\n        });\n      }\n    }, 4);\n  };\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"../reducers\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class User extends React.Component {\n  renderTemplate = () => {\n    const { name, error, isFetching } = this.props;\n\n    if (error) {\n      return <p>Во время запроса произошла ошибка, обновите страницу</p>;\n    }\n\n    if (isFetching) {\n      return <p>Загружаю...</p>;\n    }\n\n    if (name) {\n      return <p>Привет, {name}!</p>;\n    } else {\n      return (\n        <button className=\"btn\" onClick={this.props.handleLogin}>\n          Войти\n        </button>\n      );\n    }\n  };\n  render() {\n    return <div className=\"ib user\">{this.renderTemplate()}</div>;\n  }\n}\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  isFetching: PropTypes.bool.isRequired,\n  handleLogin: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { User } from \"../components/User\";\nimport { handleLogin } from \"../actions/UserActions\";\nimport { getPhotos } from \"../actions/PageActions\";\nimport { getCurrentYear } from \"../util/date\";\n\nclass UserContainer extends React.Component {\n  handleLogin = () => {\n    const { handleLogin, getPhotos } = this.props;\n    const successCallback = () => {\n      const year = getCurrentYear();\n      getPhotos(year);\n    };\n\n    handleLogin(successCallback);\n  };\n\n  render() {\n    const { user } = this.props;\n    return (\n      <User\n        name={user.name}\n        error={user.error}\n        isFetching={user.isFetching}\n        handleLogin={this.handleLogin}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    user: store.user,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleLogin: successCallback => dispatch(handleLogin(successCallback)),\n    getPhotos: year => dispatch(getPhotos(year)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ListPhoto = ({ photos, openModal }) => {\n  return photos.map(photo => (\n    <div key={photo.id} className=\"photo\">\n      <p>\n        <img\n          src={photo.sizes[0].url}\n          alt=\"thumbnail vk\"\n          onClick={() => openModal(photo.sizes[4].url)}\n        />\n      </p>\n      <p>{photo.likes.count} ❤</p>\n    </div>\n  ));\n};\n\nexport default ListPhoto;\n\nListPhoto.propTypes = {\n  photos: PropTypes.array.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass BigPhoto extends React.Component {\n  state = {\n    isLoading: false,\n  };\n  componentDidMount() {\n    this.loadImage(this.props.url);\n  }\n  loadImage = src => {\n    this.setState({ isLoading: true });\n\n    let img = new Image();\n    img.onload = () => {\n      this.setState({ isLoading: false });\n    };\n\n    img.src = src;\n  };\n  render() {\n    const { isLoading } = this.state;\n    const { url } = this.props;\n    return isLoading ? <p>Загружаю...</p> : <img src={url} alt=\"big vk\" />;\n  }\n}\n\nexport default BigPhoto;\n\nBigPhoto.propTypes = {\n  url: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport ListPhoto from \"./ListPhoto\";\nimport BigPhoto from \"./BigPhoto\";\nimport PropTypes from \"prop-types\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    padding: \"0px\",\n  },\n  overlay: {\n    backgroundColor: \"rgba(0,0,0,0.7)\",\n  },\n};\n\nexport default class PhotoManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modalIsOpen: false,\n      activeUrl: \"\",\n    };\n  }\n\n  openModal = url => {\n    this.setState({ modalIsOpen: true, activeUrl: url });\n  };\n\n  closeModal = () => {\n    this.setState({ modalIsOpen: false, activeUrl: \"\" });\n  };\n\n  render() {\n    const { photos } = this.props;\n    const { modalIsOpen, activeUrl } = this.state;\n    return (\n      <React.Fragment>\n        <ListPhoto photos={photos} openModal={this.openModal} />\n        <Modal\n          isOpen={modalIsOpen}\n          ariaHideApp={false}\n          style={customStyles}\n          onRequestClose={this.closeModal}\n        >\n          <BigPhoto url={activeUrl} />\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nPhotoManager.propTypes = {\n  photos: PropTypes.array.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PhotoManager from \"./PhotoManager\";\n\nexport class Page extends React.Component {\n  onBtnClick = event => {\n    const year = +event.currentTarget.innerText;\n    this.props.getPhotos(year);\n  };\n\n  renderButtons = () => {\n    // const years = [2018, 2017, 2016, 2015, 2014];\n    const { years } = this.props;\n\n    return years.map((item, index) => {\n      return (\n        <button key={index} className=\"btn\" onClick={this.onBtnClick}>\n          {item}\n        </button>\n      );\n    });\n  };\n\n  renderTemplate = () => {\n    const { photos, isFetching, error } = this.props;\n\n    if (error) {\n      return <p className=\"error\">Во время загрузки фото произошла ошибка</p>;\n    }\n\n    if (isFetching) {\n      return <p>Загрузка...</p>;\n    } else {\n      return <PhotoManager photos={photos} />;\n    }\n  };\n\n  render() {\n    const { year, photos } = this.props;\n    return (\n      <div className=\"ib page\">\n        <p>{this.renderButtons()}</p>\n        <h3>\n          {year} год [{photos.length}]\n        </h3>\n        {this.renderTemplate()}\n      </div>\n    );\n  }\n}\n\nPage.propTypes = {\n  year: PropTypes.number.isRequired,\n  photos: PropTypes.array.isRequired,\n  getPhotos: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  isFetching: PropTypes.bool.isRequired,\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Page } from \"../components/Page\";\nimport { getPhotos } from \"../actions/PageActions\";\nimport { getLastYears } from \"../util/date\";\n\nconst LAST_5_YEARS = 5;\n\nclass PageContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.years = getLastYears(LAST_5_YEARS);\n  }\n\n  render() {\n    const { page, getPhotos } = this.props;\n    return (\n      <Page\n        photos={page.photos}\n        year={page.year}\n        isFetching={page.isFetching}\n        error={page.error}\n        getPhotos={getPhotos}\n        years={this.years}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    page: store.page,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPhotos: year => dispatch(getPhotos(year)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageContainer);\n","import React, { Component } from \"react\";\nimport UserContainer from \"../containers/UserContainer\";\nimport PageContainer from \"../containers/PageContainer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <PageContainer />\n        <UserContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/configureStore\";\nimport App from \"./components/App\"; // изменили путь\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./styles/styles.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}